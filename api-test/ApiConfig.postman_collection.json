{
	"info": {
		"_postman_id": "d2eb18d9-7430-4e71-b52a-1c401e0dbf2d",
		"name": "ApiConfig",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api test suite - creditor institutions",
			"item": [
				{
					"name": "health check",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"health check\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/info",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutions\", function () {",
									"  pm.response.to.have.status(200);",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.page_info).to.be.exist",
									"  pm.expect(responseJson.creditor_institutions).to.be.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitution\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"creditor_institution_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"creditor_institution_code\": \"{{creditor_institution_code}}\",\n  \"enabled\": true,\n  \"business_name\": \"Comune di Lorem Ipsum\",\n  \"address\": {\n    \"location\": \"Via delle vie 3\",\n    \"city\": \"Rome\",\n    \"zip_code\": \"00187\",\n    \"country_code\": \"RM\",\n    \"tax_domicile\": \"00111\"\n  },\n  \"fk_int_quadrature\": null,\n  \"psp_payment\": true,\n  \"reporting_ftp\": false,\n  \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"creditor_institution_code\": \"{{creditor_institution_code}}\",\n    \"enabled\": true,\n    \"business_name\": \"Comune di Lorem Ipsum\",\n    \"address\": {\n        \"location\": \"Via delle vie 4\",\n        \"city\": \"Rome\",\n        \"zip_code\": \"00187\",\n        \"country_code\": \"RM\",\n        \"tax_domicile\": \"00111\"\n    },\n    \"fk_int_quadrature\": null,\n    \"psp_payment\": true,\n    \"reporting_ftp\": false,\n    \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionStations\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/stations",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"stations"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionEncodings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionEncodings\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionsIbans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionsIbans\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/ibans",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"ibans"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getStations\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations?limit=1&page=0&creditorinstitutioncode=00168480242&intermediarycode=80007580279",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "creditorinstitutioncode",
									"value": "00168480242"
								},
								{
									"key": "intermediarycode",
									"value": "80007580279"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "80007580279_01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrokers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBrokers\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"broker_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"{{broker_code}}\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"{{broker_code}}\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio 2\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIcas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIcas\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/icas?page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"icas"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIca",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/icas/:id",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"icas",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "C_A703-IBAN-20170308000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCounterpartTables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/counterparttables?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"counterparttables"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCounterpartTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/counterparttables/:id?creditorinstitutioncode=00168480242",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"counterparttables",
								":id"
							],
							"query": [
								{
									"key": "creditorinstitutioncode",
									"value": "00168480242"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "api test error - creditor institutions",
			"item": [
				{
					"name": "createCreditorInstitution Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitution_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"creditor_institution_code\": \"1234567890100\",\n  \"enabled\": true,\n  \"business_name\": \"Comune di Lorem Ipsum\",\n  \"address\": {\n    \"location\": \"Via delle vie 3\",\n    \"city\": \"Rome\",\n    \"zip_code\": \"00187\",\n    \"country_code\": \"RM\",\n    \"tax_domicile\": \"00111\"\n  },\n  \"fk_int_quadrature\": null,\n  \"psp_payment\": true,\n  \"reporting_ftp\": false,\n  \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCreditorInstitution BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateCreditorInstitution_badRequest\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"business_name\": \"Comune di Lorem Ipsum\",\n    \"address\": {\n        \"location\": \"Via delle vie 4\",\n        \"city\": \"Rome\",\n        \"zip_code\": \"00187\",\n        \"country_code\": \"RM\",\n        \"tax_domicile\": \"00111\"\n    },\n    \"fk_int_quadrature\": null,\n    \"psp_payment\": true,\n    \"reporting_ftp\": false,\n    \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "0010101010"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitution NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitution_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "axz"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createBroker Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createBroker_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"80007580279\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBroker BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateBroker_badRequest\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"description\": \"Regione Lazio 2\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "80000580202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBroker NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteBroker_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "zxx"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
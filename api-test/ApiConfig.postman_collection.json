{
	"info": {
		"_postman_id": "618a0964-fcb8-453e-b456-70f5f36d256b",
		"name": "ApiConfig",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"item": [
				{
					"name": "Login JWT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"login JWT\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"jwt\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "resource",
									"value": "{{resource}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://login.microsoftonline.com/{{tenant_id}}/oauth2/token",
							"protocol": "https",
							"host": [
								"login",
								"microsoftonline",
								"com"
							],
							"path": [
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "api test suite - creditor institutions",
			"item": [
				{
					"name": "health check",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"health check\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/info",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutions\", function () {",
									"  pm.response.to.have.status(200);",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.page_info).to.be.exist",
									"  pm.expect(responseJson.creditor_institutions).to.be.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitution\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"creditor_institution_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"creditor_institution_code\": \"{{creditor_institution_code}}\",\n  \"enabled\": true,\n  \"business_name\": \"Comune di Lorem Ipsum\",\n  \"address\": {\n    \"location\": \"Via delle vie 3\",\n    \"city\": \"Rome\",\n    \"zip_code\": \"00187\",\n    \"country_code\": \"RM\",\n    \"tax_domicile\": \"00111\"\n  },\n  \"psp_payment\": true,\n  \"reporting_ftp\": false,\n  \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"creditor_institution_code\": \"{{creditor_institution_code}}\",\n    \"enabled\": true,\n    \"business_name\": \"Comune di Lorem Ipsum\",\n    \"address\": {\n        \"location\": \"Via delle vie 4\",\n        \"city\": \"Rome\",\n        \"zip_code\": \"00187\",\n        \"country_code\": \"RM\",\n        \"tax_domicile\": \"00111\"\n    },\n    \"fk_int_quadrature\": null,\n    \"psp_payment\": true,\n    \"reporting_ftp\": false,\n    \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionStations\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/stations",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"stations"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createCreditorInstitutionStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitutionStation\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_code\": \"80007580279_01\",\n    \"application_code\": 1,\n    \"segregation_code\": 1,\n    \"mod4\": false,\n    \"broadcast\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/stations",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"stations"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCreditorInstitutionStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateCreditorInstitutionStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_code\": \"80007580279_01\",\n    \"application_code\": 1,\n    \"segregation_code\": 1,\n    \"aux_digit\": \"10\",\n    \"mod4\": true,\n    \"broadcast\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/stations/:stationcode",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"stations",
								":stationcode"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								},
								{
									"key": "stationcode",
									"value": "80007580279_01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitutionStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitutionStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/stations/:stationcode",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"stations",
								":stationcode"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								},
								{
									"key": "stationcode",
									"value": "80007580279_01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitution",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitution\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{creditor_institution_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionEncodings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionEncodings\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createCreditorInstitutionEncoding",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitutionEncoding\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"encoding_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code_type\": \"QR_CODE\",\n    \"encoding_code\": \"{{encoding_code}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitutionEncoding",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitutionEncoding\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings/:encoding_code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings",
								":encoding_code"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								},
								{
									"key": "encoding_code",
									"value": "{{encoding_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCreditorInstitutionsIbans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getCreditorInstitutionsIbans\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/ibans",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"ibans"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getStations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getStations\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "creditorinstitutioncode",
									"value": "00168480242",
									"disabled": true
								},
								{
									"key": "intermediarycode",
									"value": "80007580279",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createStation\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"station_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_code\": \"{{station_code}}\",\n    \"enabled\": true,\n    \"version\": 1,\n    \"ip\": \"NodoDeiPagamentiDellaPATest.sia.eu\",\n    \"password\": \"password\",\n    \"port\": 80,\n    \"redirect_ip\": \"paygov.collaudo.regione.lazio.it\",\n    \"redirect_path\": \"nodo-regionale-fesp/paaInviaRispostaPagamento.html\",\n    \"redirect_port\": 443,\n    \"service\": \"openspcoop/PD/RT6TPDREGVENETO\",\n    \"redirect_protocol\": \"HTTPS\",\n    \"proxy_enabled\": true,\n    \"proxy_host\": \"10.101.1.95\",\n    \"proxy_port\": 8080,\n    \"protocol\": \"HTTP\",\n    \"thread_number\": 2,\n    \"timeout_a\": 15,\n    \"timeout_b\": 30,\n    \"timeout_c\": 120,\n    \"flag_online\": true,\n    \"broker_code\": \"80007580279\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "getStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{station_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_code\": \"{{station_code}}\",\n    \"enabled\": true,\n    \"version\": 2,\n    \"ip\": \"NodoDeiPagamentiDellaPATest.sia.eu\",\n    \"password\": \"password\",\n    \"port\": 80,\n    \"redirect_ip\": \"paygov.collaudo.regione.lazio.it\",\n    \"redirect_path\": \"nodo-regionale-fesp/paaInviaRispostaPagamento.html\",\n    \"redirect_port\": 443,\n    \"service\": \"openspcoop/PD/RT6TPDREGVENETO\",\n    \"redirect_protocol\": \"HTTPS\",\n    \"proxy_enabled\": true,\n    \"proxy_host\": \"10.101.1.95\",\n    \"proxy_port\": 8080,\n    \"protocol\": \"HTTP\",\n    \"thread_number\": 2,\n    \"timeout_a\": 15,\n    \"timeout_b\": 30,\n    \"timeout_c\": 120,\n    \"flag_online\": true,\n    \"broker_code\": \"80007580279\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:id",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{station_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteStation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteStation\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:id",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{station_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrokers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBrokers\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createBroker\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function makeid(length) {",
									"    var result           = '';",
									"    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';",
									"    var charactersLength = characters.length;",
									"    for ( var i = 0; i < length; i++ ) {",
									"      result += characters.charAt(Math.floor(Math.random() * charactersLength));",
									"    }",
									"    return result;",
									"}",
									"",
									"pm.globals.set(\"broker_code\", makeid(35));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"{{broker_code}}\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"{{broker_code}}\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio 2\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBroker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteBroker\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "{{broker_code}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIcas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIcas\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/icas?page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"icas"
							],
							"query": [
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getIca",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/icas/:id?creditorinstitutioncode=00168480242",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"icas",
								":id"
							],
							"query": [
								{
									"key": "creditorinstitutioncode",
									"value": "00168480242"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "C_A703-IBAN-20170308000000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCounterpartTables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/counterparttables?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"counterparttables"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getCounterpartTable",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getIca\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/counterparttables/:id?creditorinstitutioncode=00168480242",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"counterparttables",
								":id"
							],
							"query": [
								{
									"key": "creditorinstitutioncode",
									"value": "00168480242"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "checkXSD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"checkXSD\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data; boundary=--------------------------305231672572246570767076",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Length",
								"value": "105513",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "src/test/resources/file/ica_valid.xml"
								}
							]
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/icas/xsd",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"icas",
								"xsd"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "api test error - creditor institutions",
			"item": [
				{
					"name": "createCreditorInstitution Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitution_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"creditor_institution_code\": \"00168480242\",\n  \"enabled\": true,\n  \"business_name\": \"Comune di Lorem Ipsum\",\n  \"address\": {\n    \"location\": \"Via delle vie 3\",\n    \"city\": \"Rome\",\n    \"zip_code\": \"00187\",\n    \"country_code\": \"RM\",\n    \"tax_domicile\": \"00111\"\n  },\n  \"psp_payment\": true,\n  \"reporting_ftp\": false,\n  \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCreditorInstitution BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateCreditorInstitution_badRequest\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"business_name\": \"Comune di Lorem Ipsum\",\n    \"address\": {\n        \"location\": \"Via delle vie 4\",\n        \"city\": \"Rome\",\n        \"zip_code\": \"00187\",\n        \"country_code\": \"RM\",\n        \"tax_domicile\": \"00111\"\n    },\n    \"fk_int_quadrature\": null,\n    \"psp_payment\": true,\n    \"reporting_ftp\": false,\n    \"reporting_zip\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "0010101010"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitution NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitution_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "axz"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createCreditorInstitutionEncoding Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createCreditorInstitutionEncoding_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"code_type\": \"QR_CODE\",\n    \"encoding_code\": \"00168480242\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCreditorInstitutionEncoding NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteCreditorInstitutionEncoding_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/creditorinstitutions/:code/encodings/:encoding_code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"creditorinstitutions",
								":code",
								"encodings",
								":encoding_code"
							],
							"variable": [
								{
									"key": "code",
									"value": "00168480242"
								},
								{
									"key": "encoding_code",
									"value": "asdz"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createBroker Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createBroker_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"broker_code\": \"80007580279\",\n    \"enabled\": true,\n    \"description\": \"Regione Lazio\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBroker BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateBroker_badRequest\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"description\": \"Regione Lazio 2\",\n    \"extended_fault_bean\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "80000580202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBroker NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteBroker_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokers/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokers",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "zxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createStation Conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"createStation_conflict\", function () {",
									"  pm.response.to.have.status(409);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_code\": \"80007580279_01\",\n    \"enabled\": true,\n    \"version\": 1,\n    \"ip\": \"NodoDeiPagamentiDellaPATest.sia.eu\",\n    \"password\": \"password\",\n    \"port\": 80,\n    \"redirect_ip\": \"paygov.collaudo.regione.lazio.it\",\n    \"redirect_path\": \"nodo-regionale-fesp/paaInviaRispostaPagamento.html\",\n    \"redirect_port\": 443,\n    \"service\": \"openspcoop/PD/RT6TPDREGVENETO\",\n    \"redirect_protocol\": \"HTTPS\",\n    \"proxy_enabled\": true,\n    \"proxy_host\": \"10.101.1.95\",\n    \"proxy_port\": 8080,\n    \"protocol\": \"HTTP\",\n    \"thread_number\": 2,\n    \"timeout_a\": 15,\n    \"timeout_b\": 30,\n    \"timeout_c\": 120,\n    \"flag_online\": true,\n    \"broker_code\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateStation BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"updateStation_badRequest\", function () {",
									"  pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enabled\": true,\n    \"version\": 2,\n    \"ip\": \"NodoDeiPagamentiDellaPATest.sia.eu\",\n    \"password\": \"password\",\n    \"port\": 80,\n    \"redirect_ip\": \"paygov.collaudo.regione.lazio.it\",\n    \"redirect_path\": \"nodo-regionale-fesp/paaInviaRispostaPagamento.html\",\n    \"redirect_port\": 443,\n    \"service\": \"openspcoop/PD/RT6TPDREGVENETO\",\n    \"redirect_protocol\": \"HTTPS\",\n    \"proxy_enabled\": true,\n    \"proxy_host\": \"10.101.1.95\",\n    \"proxy_port\": 8080,\n    \"protocol\": \"HTTP\",\n    \"thread_number\": 2,\n    \"timeout_a\": 15,\n    \"timeout_b\": 30,\n    \"timeout_c\": 120,\n    \"flag_online\": true,\n    \"fk_intermediario_pa\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "80000580202"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteStation NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"deleteStation_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/stations/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"stations",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "zxx"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "api test suite - psp",
			"item": [
				{
					"name": "getPaymentServiceProviders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getPaymentServiceProviders\", function () {",
									"  pm.response.to.have.status(200);",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.page_info).to.be.exist",
									"  pm.expect(responseJson.payment_service_providers).to.be.exist",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/paymentserviceproviders?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"paymentserviceproviders"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getPaymentServiceProvider",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getPaymentServiceProvider\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/paymentserviceproviders/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"paymentserviceproviders",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "BPPIITRRZZZ"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrokersPsp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBrokersPsp\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokerspsp?page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokerspsp"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrokerPsp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBrokerPsp\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokerspsp/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokerspsp",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "17103880000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getChannels\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/channels?limit=50&page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"channels"
							],
							"query": [
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getChannel\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/channels/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"channels",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "00001060966_01"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getServices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getChannel\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/services?page=0",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"services"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "api test error - psp",
			"item": [
				{
					"name": "getPaymentServiceProvider NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getPaymentServiceProvider_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/paymentserviceproviders/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"paymentserviceproviders",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "zzz"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrokerPsp NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getBrokerPsp_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/brokerspsp/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"brokerspsp",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "ggg"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getChannel NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"getChannel_notFound\", function () {",
									"  pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-config-host}}/{{api-config-base-path}}/channels/:code",
							"host": [
								"{{api-config-host}}"
							],
							"path": [
								"{{api-config-base-path}}",
								"channels",
								":code"
							],
							"variable": [
								{
									"key": "code",
									"value": "111"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}

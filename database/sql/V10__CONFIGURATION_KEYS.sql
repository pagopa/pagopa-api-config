create table NODO4_CFG.CONFIGURATION_KEYS
(
    CONFIG_CATEGORY    VARCHAR2(255 char) not null,
    CONFIG_KEY         VARCHAR2(255 char) not null,
    CONFIG_VALUE       VARCHAR2(255 char) not null,
    CONFIG_DESCRIPTION VARCHAR2(255 char)
);

create unique index UQ_CONFIGURATION_KEYS on NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY);

INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.jobName_mod3UpdateNotifiedPositionPayment.jobDescription', 'Description', 'Mod3 update notified Position Payment');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.jobName_mod3UpdateNotifiedPositionPayment.enabled', 'true', 'Job enabled (true/false)');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.paSendRtMaxRetry', '5', 'pa Send Rt max retry');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.mod3Cancel.minutesWaitPaOld', '0', 'indica i minuti di attesa per arrivo RPT in caso di Pa Old prima di annullare posizione debitoria');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'inviaCarrelloRpt.maxNumRptInCartMultibeneficiario', '2', NULL);
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'inviaCarrelloRpt.maxVersamentiInSecondRptMultibeneficiario', '1', NULL);
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'default_token_duration_validity_millis', '180000', ' default millisecondi validit√† token');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'timeout.paSendRT.pull', 'TIMEOUT_C', 'Tipo timeout');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.paAttivaRptMaxRetry', '5', 'pa attiva Rpt max retry');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.jobName_paRetryAttivaRpt.jobDescription', 'Description', 'retry attiva rpt ');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.jobName_paRetryAttivaRpt.enabled', 'true', 'Job enabled (true/false)');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'timeout.paaAttivaRPT.pull', 'TIMEOUT_C', 'timeout');
INSERT INTO NODO4_CFG.CONFIGURATION_KEYS (CONFIG_CATEGORY, CONFIG_KEY, CONFIG_VALUE, CONFIG_DESCRIPTION) VALUES('GLOBAL', 'scheduler.jobName_idempotencyCacheClean.enabled', 'false', 'jobName_idempotencyCacheClean enabled/disabled');

commit;

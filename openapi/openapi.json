<<<<<<< HEAD
{
    "components": {
        "schemas": {
            "Broker": {
                "properties": {
                    "broker_code": {
                        "example": "223344556677889900",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "example": "Lorem ipsum dolor sit amet",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "broker_code",
                    "description",
                    "enabled"
                ],
                "type": "object"
            },
            "BrokerDetails": {
                "properties": {
                    "broker_code": {
                        "example": "223344556677889900",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "example": "Lorem ipsum dolor sit amet",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extended_fault_bean": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "broker_code",
                    "description",
                    "enabled",
                    "extended_fault_bean"
                ],
                "type": "object"
            },
            "BrokerPsp": {
                "properties": {
                    "broker_psp_code": {
                        "example": "223344556677889900",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "broker_psp_code",
                    "description",
                    "enabled"
                ],
                "type": "object"
            },
            "BrokerPspDetails": {
                "properties": {
                    "broker_psp_code": {
                        "example": "223344556677889900",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "extended_fault_bean": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "broker_psp_code",
                    "description",
                    "enabled",
                    "extended_fault_bean"
                ],
                "type": "object"
            },
            "Brokers": {
                "properties": {
                    "brokers_list": {
                        "items": {
                            "$ref": "#/components/schemas/Broker"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "brokers_list",
                    "page_info"
                ],
                "type": "object"
            },
            "BrokersPsp": {
                "properties": {
                    "brokers_psp_list": {
                        "items": {
                            "$ref": "#/components/schemas/BrokerPsp"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "brokers_psp_list",
                    "page_info"
                ],
                "type": "object"
            },
            "Channel": {
                "properties": {
                    "channel_code": {
                        "example": "223344556677889900",
                        "type": "string"
                    },
                    "description": {
                        "example": "Lorem ipsum dolor sit amet",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "channel_code",
                    "description",
                    "enabled"
                ],
                "type": "object"
            },
            "ChannelDetails": {
                "properties": {
                    "broker_psp_code": {
                        "type": "string"
                    },
                    "card_chart": {
                        "type": "boolean"
                    },
                    "channel_code": {
                        "example": "223344556677889900",
                        "type": "string"
                    },
                    "description": {
                        "example": "Lorem ipsum dolor sit amet",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "digital_stamp_brand": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "flag_io": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    },
                    "npm_service": {
                        "type": "string"
                    },
                    "on_us": {
                        "type": "boolean"
                    },
                    "password": {
                        "type": "string"
                    },
                    "payment_model": {
                        "enum": [
                            "IMMEDIATE",
                            "IMMEDIATE_MULTIBENEFICIARY",
                            "DEFERRED",
                            "ACTIVATED_AT_PSP"
                        ],
                        "type": "string"
                    },
                    "port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "proxy_enabled": {
                        "type": "boolean"
                    },
                    "proxy_host": {
                        "type": "string"
                    },
                    "proxy_password": {
                        "type": "string"
                    },
                    "proxy_port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "proxy_username": {
                        "type": "string"
                    },
                    "recovery": {
                        "type": "boolean"
                    },
                    "redirect_ip": {
                        "type": "string"
                    },
                    "redirect_path": {
                        "type": "string"
                    },
                    "redirect_port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "redirect_protocol": {
                        "type": "string"
                    },
                    "redirect_query_string": {
                        "type": "string"
                    },
                    "rt_push": {
                        "type": "boolean"
                    },
                    "serv_plugin": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "thread_number": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_a": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_b": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_c": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "broker_psp_code",
                    "channel_code",
                    "description",
                    "enabled",
                    "ip",
                    "password",
                    "port",
                    "protocol",
                    "service",
                    "thread_number",
                    "timeout_a",
                    "timeout_b",
                    "timeout_c"
                ],
                "type": "object"
            },
            "Channels": {
                "properties": {
                    "channels_list": {
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "channels_list",
                    "page_info"
                ],
                "type": "object"
            },
            "CounterpartTable": {
                "properties": {
                    "business_name": {
                        "example": "Comune di Lorem Ipsum",
                        "type": "string"
                    },
                    "creditor_institution_code": {
                        "example": "1234567890100",
                        "type": "string"
                    },
                    "id_counterpart_table": {
                        "example": "123456789",
                        "type": "string"
                    },
                    "publication_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "validity_date": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "business_name",
                    "creditor_institution_code",
                    "id_counterpart_table",
                    "publication_date",
                    "validity_date"
                ],
                "type": "object"
            },
            "CounterpartTables": {
                "properties": {
                    "counterpart_tables": {
                        "items": {
                            "$ref": "#/components/schemas/CounterpartTable"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "counterpart_tables",
                    "page_info"
                ],
                "type": "object"
            },
            "CreditorInstitution": {
                "properties": {
                    "business_name": {
                        "example": "Comune di Lorem Ipsum",
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string"
                    },
                    "creditor_institution_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "enabled": {
                        "default": true,
                        "description": "creditor institution enabled",
                        "type": "boolean"
                    }
                },
                "required": [
                    "business_name",
                    "creditor_institution_code",
                    "enabled"
                ],
                "type": "object"
            },
            "CreditorInstitutionAddress": {
                "properties": {
                    "city": {
                        "example": "Lorem",
                        "type": "string"
                    },
                    "country_code": {
                        "example": "RM",
                        "pattern": "^\\w{2}$",
                        "type": "string"
                    },
                    "location": {
                        "example": "Via delle vie 3",
                        "type": "string"
                    },
                    "tax_domicile": {
                        "type": "string"
                    },
                    "zip_code": {
                        "example": "00187",
                        "pattern": "^\\d{5}$",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreditorInstitutionDetails": {
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/CreditorInstitutionAddress"
                    },
                    "business_name": {
                        "example": "Comune di Lorem Ipsum",
                        "maxLength": 70,
                        "minLength": 0,
                        "type": "string"
                    },
                    "creditor_institution_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "enabled": {
                        "default": true,
                        "description": "creditor institution enabled",
                        "type": "boolean"
                    },
                    "psp_payment": {
                        "default": true,
                        "type": "boolean"
                    },
                    "reporting_ftp": {
                        "default": false,
                        "type": "boolean"
                    },
                    "reporting_zip": {
                        "default": false,
                        "type": "boolean"
                    }
                },
                "required": [
                    "address",
                    "business_name",
                    "creditor_institution_code",
                    "enabled",
                    "psp_payment",
                    "reporting_ftp",
                    "reporting_zip"
                ],
                "type": "object"
            },
            "CreditorInstitutionEncodings": {
                "properties": {
                    "encodings": {
                        "items": {
                            "$ref": "#/components/schemas/Encoding"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "encodings"
                ],
                "type": "object"
            },
            "CreditorInstitutionStation": {
                "properties": {
                    "application_code": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "aux_digit": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "broadcast": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "default": true,
                        "description": "station enabled",
                        "type": "boolean"
                    },
                    "mod4": {
                        "type": "boolean"
                    },
                    "segregation_code": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "station_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "version": {
                        "description": "number version",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "station_code",
                    "version"
                ],
                "type": "object"
            },
            "CreditorInstitutionStationEdit": {
                "properties": {
                    "application_code": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "aux_digit": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "broadcast": {
                        "type": "boolean"
                    },
                    "mod4": {
                        "type": "boolean"
                    },
                    "segregation_code": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "station_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    }
                },
                "required": [
                    "station_code"
                ],
                "type": "object"
            },
            "CreditorInstitutionStationList": {
                "properties": {
                    "stations_list": {
                        "items": {
                            "$ref": "#/components/schemas/CreditorInstitutionStation"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "stations_list"
                ],
                "type": "object"
            },
            "CreditorInstitutions": {
                "properties": {
                    "creditor_institutions": {
                        "items": {
                            "$ref": "#/components/schemas/CreditorInstitution"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "creditor_institutions",
                    "page_info"
                ],
                "type": "object"
            },
            "Encoding": {
                "properties": {
                    "code_type": {
                        "enum": [
                            "BARCODE_GS1_128",
                            "QR_CODE",
                            "BARCODE_128_AIM"
                        ],
                        "type": "string"
                    },
                    "encoding_code": {
                        "example": "0000111",
                        "type": "string"
                    }
                },
                "required": [
                    "code_type",
                    "encoding_code"
                ],
                "type": "object"
            },
            "Iban": {
                "properties": {
                    "iban": {
                        "example": "IT99C0222211111000000000000",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "publication_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "validity_date": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "iban",
                    "publication_date",
                    "validity_date"
                ],
                "type": "object"
            },
            "Ibans": {
                "properties": {
                    "ibans": {
                        "items": {
                            "$ref": "#/components/schemas/Iban"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ibans"
                ],
                "type": "object"
            },
            "Ica": {
                "properties": {
                    "business_name": {
                        "example": "Comune di Lorem Ipsum",
                        "type": "string"
                    },
                    "creditor_institution_code": {
                        "example": "1234567890100",
                        "type": "string"
                    },
                    "id_ica": {
                        "example": "123456789",
                        "type": "string"
                    },
                    "publication_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "validity_date": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "business_name",
                    "creditor_institution_code",
                    "id_ica",
                    "publication_date",
                    "validity_date"
                ],
                "type": "object"
            },
            "Icas": {
                "properties": {
                    "icas": {
                        "items": {
                            "$ref": "#/components/schemas/Ica"
                        },
                        "type": "array"
                    },
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    }
                },
                "required": [
                    "icas",
                    "page_info"
                ],
                "type": "object"
            },
            "PageInfo": {
                "properties": {
                    "items_found": {
                        "description": "Number of items found. (The last page may have fewer elements than required)",
                        "format": "int32",
                        "type": "integer"
                    },
                    "limit": {
                        "description": "Required number of items per page",
                        "format": "int32",
                        "type": "integer"
                    },
                    "page": {
                        "description": "Page number",
                        "format": "int32",
                        "type": "integer"
                    },
                    "total_pages": {
                        "description": "Total number of pages",
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "required": [
                    "items_found",
                    "limit",
                    "page",
                    "total_pages"
                ],
                "type": "object"
            },
            "PaymentServiceProvider": {
                "properties": {
                    "business_name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "psp_code": {
                        "type": "string"
                    }
                },
                "required": [
                    "business_name",
                    "enabled",
                    "psp_code"
                ],
                "type": "object"
            },
            "PaymentServiceProviderDetails": {
                "properties": {
                    "abi": {
                        "type": "string"
                    },
                    "agid_psp": {
                        "description": "True if the PSP is internal",
                        "type": "boolean"
                    },
                    "bic": {
                        "type": "string"
                    },
                    "business_name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "my_bank_code": {
                        "description": "MyBank code",
                        "type": "string"
                    },
                    "psp_code": {
                        "type": "string"
                    },
                    "stamp": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "tax_code": {
                        "type": "string"
                    },
                    "transfer": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "vat_number": {
                        "type": "string"
                    }
                },
                "required": [
                    "business_name",
                    "enabled",
                    "psp_code"
                ],
                "type": "object"
            },
            "PaymentServiceProviders": {
                "properties": {
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    },
                    "payment_service_providers": {
                        "items": {
                            "$ref": "#/components/schemas/PaymentServiceProvider"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "page_info",
                    "payment_service_providers"
                ],
                "type": "object"
            },
            "ProblemJson": {
                "properties": {
                    "detail": {
                        "description": "A human readable explanation specific to this occurrence of the problem.",
                        "example": "There was an error processing the request",
                        "type": "string"
                    },
                    "instance": {
                        "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                        "format": "uri",
                        "type": "string"
                    },
                    "status": {
                        "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                        "example": 200,
                        "format": "int32",
                        "maximum": 600,
                        "minimum": 100,
                        "type": "integer"
                    },
                    "title": {
                        "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable",
                        "type": "string"
                    },
                    "type": {
                        "description": "An absolute URI that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).",
                        "example": "https://example.com/problem/constraint-violation",
                        "format": "uri",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Service": {
                "properties": {
                    "abi_code": {
                        "maxLength": 5,
                        "minLength": 0,
                        "type": "string"
                    },
                    "broker_psp_code": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "cart_card": {
                        "type": "boolean"
                    },
                    "channel_app": {
                        "type": "boolean"
                    },
                    "channel_code": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "channel_url": {
                        "type": "string"
                    },
                    "convention_code": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "fixed_cost": {
                        "format": "double",
                        "type": "number"
                    },
                    "flag_io": {
                        "type": "boolean"
                    },
                    "flow_id": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "language_code": {
                        "enum": [
                            "IT",
                            "EN",
                            "FR",
                            "DE",
                            "SL"
                        ],
                        "maxLength": 2,
                        "minLength": 0,
                        "type": "string"
                    },
                    "logo_psp": {
                        "items": {
                            "format": "byte",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "logo_service": {
                        "items": {
                            "format": "byte",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "maximum_amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "minimum_amount": {
                        "format": "double",
                        "type": "number"
                    },
                    "mybank_code": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "on_us": {
                        "type": "boolean"
                    },
                    "payment_method_channel": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "payment_type_code": {
                        "enum": [
                            "PAYPAL",
                            "POSTAL",
                            "TREASURY_BANK_TRANSFER",
                            "DIRECT_DEBIT",
                            "PAYMENT_CARD",
                            "PSP_PAYMENT",
                            "ONLINE_BANKING_PAYMENT",
                            "JIFFY",
                            "MYBANK"
                        ],
                        "type": "string"
                    },
                    "psp_business_name": {
                        "type": "string"
                    },
                    "psp_code": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "psp_flag_stamp": {
                        "type": "boolean"
                    },
                    "service_availability": {
                        "maxLength": 511,
                        "minLength": 0,
                        "type": "string"
                    },
                    "service_description": {
                        "maxLength": 511,
                        "minLength": 0,
                        "type": "string"
                    },
                    "service_name": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "tags": {
                        "maxLength": 135,
                        "minLength": 0,
                        "type": "string"
                    },
                    "timestamp_insertion": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "validity_date": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Services": {
                "properties": {
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    },
                    "services": {
                        "items": {
                            "$ref": "#/components/schemas/Service"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "page_info",
                    "services"
                ],
                "type": "object"
            },
            "Station": {
                "properties": {
                    "enabled": {
                        "default": true,
                        "description": "station enabled",
                        "type": "boolean"
                    },
                    "station_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "version": {
                        "description": "number version",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "enabled",
                    "station_code",
                    "version"
                ],
                "type": "object"
            },
            "StationDetails": {
                "properties": {
                    "broker_code": {
                        "type": "string"
                    },
                    "enabled": {
                        "default": true,
                        "description": "station enabled",
                        "type": "boolean"
                    },
                    "flag_online": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ip_4mod": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "port_4mod": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocol_4mod": {
                        "type": "string"
                    },
                    "proxy_enabled": {
                        "type": "boolean"
                    },
                    "proxy_host": {
                        "type": "string"
                    },
                    "proxy_password": {
                        "type": "string"
                    },
                    "proxy_port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "proxy_username": {
                        "type": "string"
                    },
                    "redirect_ip": {
                        "type": "string"
                    },
                    "redirect_path": {
                        "type": "string"
                    },
                    "redirect_port": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "redirect_protocol": {
                        "type": "string"
                    },
                    "redirect_query_string": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "service_4mod": {
                        "type": "string"
                    },
                    "station_code": {
                        "example": "1234567890100",
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string"
                    },
                    "thread_number": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_a": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_b": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "timeout_c": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "version": {
                        "description": "number version",
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "required": [
                    "broker_code",
                    "enabled",
                    "ip",
                    "password",
                    "port",
                    "protocol",
                    "service",
                    "station_code",
                    "thread_number",
                    "timeout_a",
                    "timeout_b",
                    "timeout_c",
                    "version"
                ],
                "type": "object"
            },
            "Stations": {
                "properties": {
                    "page_info": {
                        "$ref": "#/components/schemas/PageInfo"
                    },
                    "stations": {
                        "items": {
                            "$ref": "#/components/schemas/Station"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "page_info",
                    "stations"
                ],
                "type": "object"
            },
            "XSDValidation": {
                "properties": {
                    "detail": {
                        "example": "Invalid content was found starting with element 'idBancaSeller'. One of '{ibanAccredito}' is expected. Error at lineNumber: 10",
                        "type": "string"
                    },
                    "xsdCompliant": {
                        "example": false,
                        "type": "boolean"
                    },
                    "xsdSchema": {
                        "example": "https://raw.githubusercontent.com/pagopa/pagopa-api/master/general/InformativaContoAccredito_1_2_1.xsd",
                        "type": "string"
                    }
                },
                "required": [
                    "detail",
                    "xsdCompliant",
                    "xsdSchema"
                ],
                "type": "object"
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "description": "The API key to access this function app.",
                "in": "header",
                "name": "Ocp-Apim-Subscription-Key",
                "type": "apiKey"
            },
            "Authorization": {
                "bearerFormat": "JWT",
                "description": "JWT token get after Azure Login",
                "scheme": "Bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "Spring Application exposes Api to manage configuration for EC/PSP on the Nodo dei Pagamenti",
        "termsOfService": "https://www.pagopa.gov.it/",
        "title": "PagoPA API configuration",
        "version": "0.2.26"
    },
    "openapi": "3.0.1",
    "paths": {
        "/brokers": {
            "get": {
                "operationId": "getBrokers",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brokers"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of creditor brokers",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "post": {
                "operationId": "createBroker",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrokerDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrokerDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Create a broker",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/brokers/{brokercode}": {
            "delete": {
                "operationId": "deleteBroker",
                "parameters": [
                    {
                        "description": "broker code",
                        "in": "path",
                        "name": "brokercode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete a broker",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "get": {
                "operationId": "getBroker",
                "parameters": [
                    {
                        "description": "broker code.",
                        "in": "path",
                        "name": "brokercode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrokerDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get creditor broker details ",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "put": {
                "operationId": "updateBroker",
                "parameters": [
                    {
                        "description": "broker code",
                        "in": "path",
                        "name": "brokercode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BrokerDetails"
                            }
                        }
                    },
                    "description": "The values to update of the broker",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrokerDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Update a broker",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/brokerspsp": {
            "get": {
                "operationId": "getBrokersPsp",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrokersPsp"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of PSP brokers",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/brokerspsp/{brokerpspcode}": {
            "get": {
                "operationId": "getBrokerPsp",
                "parameters": [
                    {
                        "description": "Broker code of a PSP.",
                        "in": "path",
                        "name": "brokerpspcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrokerPspDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get creditor broker details ",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/channels": {
            "get": {
                "operationId": "getChannels",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channels"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of channels",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/channels/{channelcode}": {
            "get": {
                "operationId": "getChannel",
                "parameters": [
                    {
                        "description": "channel code.",
                        "in": "path",
                        "name": "channelcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChannelDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get channel details ",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/counterparttables": {
            "get": {
                "operationId": "getCounterpartTables",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CounterpartTables"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get the counterparties table",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/counterparttables/{idcounterparttable}": {
            "get": {
                "operationId": "getCounterpartTable",
                "parameters": [
                    {
                        "description": "Id counterpart table",
                        "in": "path",
                        "name": "idcounterparttable",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Creditor institution code",
                        "in": "query",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Download a XML file containing the details of a counterpart table",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions": {
            "get": {
                "operationId": "getCreditorInstitutions",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutions"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of creditor institutions",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "post": {
                "operationId": "createCreditorInstitution",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorInstitutionDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Create creditor institution",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}": {
            "delete": {
                "operationId": "deleteCreditorInstitution",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete creditor institution",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "get": {
                "operationId": "getCreditorInstitution",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get creditor institution details",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "put": {
                "operationId": "updateCreditorInstitution",
                "parameters": [
                    {
                        "description": "The fiscal code of the Organization to update",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorInstitutionDetails"
                            }
                        }
                    },
                    "description": "The values to update of the organization",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Update creditor institution",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}/encodings": {
            "get": {
                "operationId": "getCreditorInstitutionEncodings",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionEncodings"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get creditor institution encodings",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "post": {
                "operationId": "createCreditorInstitutionEncoding",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Encoding"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Encoding"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete a creditor institution encoding",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}/encodings/{encodingcode}": {
            "delete": {
                "operationId": "deleteCreditorInstitutionEncoding",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    },
                    {
                        "description": "Code of the Encoding",
                        "in": "path",
                        "name": "encodingcode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete a creditor institution encoding",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}/ibans": {
            "get": {
                "operationId": "getCreditorInstitutionsIbans",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ibans"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get creditor institution ibans",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}/stations": {
            "get": {
                "operationId": "getCreditorInstitutionStations",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionStationList"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get station details and relation info with creditor institution",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "post": {
                "operationId": "createCreditorInstitutionStation",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorInstitutionStationEdit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionStationEdit"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Create station details and relation info with creditor institution",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/creditorinstitutions/{creditorinstitutioncode}/stations/{stationcode}": {
            "delete": {
                "operationId": "deleteCreditorInstitutionStation",
                "parameters": [
                    {
                        "description": "Organization fiscal code, the fiscal code of the Organization.",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "station code.",
                        "in": "path",
                        "name": "stationcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete a relation between creditor institution and station",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "put": {
                "operationId": "updateCreditorInstitutionStation",
                "parameters": [
                    {
                        "description": "The fiscal code of the Organization to update",
                        "in": "path",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "description": "station code.",
                        "in": "path",
                        "name": "stationcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreditorInstitutionStationEdit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditorInstitutionStationEdit"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Update a relation between creditor institution and station",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/icas": {
            "get": {
                "operationId": "getIcas",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Icas"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get the list of ICAs",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/icas/xsd": {
            "post": {
                "operationId": "checkXSD",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "file": {
                                        "description": "XML file regarding ICA to check",
                                        "format": "binary",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "file"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/XSDValidation"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Validate XML against XSD",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/icas/{idica}": {
            "get": {
                "operationId": "getIca",
                "parameters": [
                    {
                        "description": "Id ICA",
                        "in": "path",
                        "name": "idica",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Creditor institution code",
                        "in": "query",
                        "name": "creditorinstitutioncode",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Download a XML file containing the details of an ICA",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/info": {
            "get": {
                "operationId": "healthCheck",
                "responses": {
                    "200": {
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Return OK if application is started",
                "tags": [
                    "Home"
                ]
            }
        },
        "/paymentserviceproviders": {
            "get": {
                "operationId": "getPaymentServiceProviders",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentServiceProviders"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of Payment Service Providers",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/paymentserviceproviders/{pspcode}": {
            "get": {
                "operationId": "getPaymentServiceProvider",
                "parameters": [
                    {
                        "description": "Code of the payment service provider",
                        "in": "path",
                        "name": "pspcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentServiceProviderDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get payment service provider details",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/services": {
            "get": {
                "operationId": "getServices",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pspcode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "brokerpspcode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "channelcode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "paymentmethodchannel",
                        "required": false,
                        "schema": {
                            "format": "int64",
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "paymentTypeCode",
                        "required": false,
                        "schema": {
                            "enum": [
                                "PAYPAL",
                                "POSTAL",
                                "TREASURY_BANK_TRANSFER",
                                "DIRECT_DEBIT",
                                "PAYMENT_CARD",
                                "PSP_PAYMENT",
                                "ONLINE_BANKING_PAYMENT",
                                "JIFFY",
                                "MYBANK"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "pspflagftamp",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "channelapp",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "onus",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flagio",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "flowid",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "minimumamount",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "maximumamount",
                        "required": false,
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "languagecode",
                        "required": false,
                        "schema": {
                            "default": "IT",
                            "enum": [
                                "IT",
                                "EN",
                                "FR",
                                "DE",
                                "SL"
                            ],
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "conventionCode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Services"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of services",
                "tags": [
                    "Payment Service Providers"
                ]
            }
        },
        "/stations": {
            "get": {
                "operationId": "getStations",
                "parameters": [
                    {
                        "description": "Number of elements on one page. Default = 50",
                        "in": "query",
                        "name": "limit",
                        "required": false,
                        "schema": {
                            "default": 50,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Page number. Page value starts from 0",
                        "in": "query",
                        "name": "page",
                        "required": true,
                        "schema": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Filter by broker",
                        "in": "query",
                        "name": "brokercode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Filter by creditor institution",
                        "in": "query",
                        "name": "creditorinstitutioncode",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Stations"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get paginated list of stations",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "post": {
                "operationId": "createStation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StationDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StationDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Create a station",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        },
        "/stations/{stationcode}": {
            "delete": {
                "operationId": "deleteStation",
                "parameters": [
                    {
                        "description": "station code",
                        "in": "path",
                        "name": "stationcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Delete a station",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "get": {
                "operationId": "getStation",
                "parameters": [
                    {
                        "description": "station code.",
                        "in": "path",
                        "name": "stationcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StationDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Get station details",
                "tags": [
                    "Creditor Institutions"
                ]
            },
            "put": {
                "operationId": "updateStation",
                "parameters": [
                    {
                        "description": "station code",
                        "in": "path",
                        "name": "stationcode",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 0,
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StationDetails"
                            }
                        }
                    },
                    "description": "The values to update of the station",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StationDetails"
                                }
                            }
                        },
                        "description": "OK."
                    },
                    "403": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Forbidden client error status."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "content": {
                            "application/json": {}
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProblemJson"
                                }
                            }
                        },
                        "description": "Service unavailable."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "summary": "Update a station",
                "tags": [
                    "Creditor Institutions"
                ]
            }
        }
    },
    "servers": [
        {
            "description": "Generated server url",
            "url": "http://127.0.0.1:8080/apiconfig/api/v1"
        }
    ],
    "tags": [
        {
            "description": "Everything about Payment Service Providers",
            "name": "Payment Service Providers"
        },
        {
            "description": "Everything about Creditor Institution",
            "name": "Creditor Institutions"
        }
    ]
}
=======
{"openapi":"3.0.1","info":{"title":"PagoPA API configuration","description":"Spring Application exposes Api to manage configuration for EC/PSP on the Nodo dei Pagamenti","termsOfService":"https://www.pagopa.gov.it/","version":"0.2.24"},"servers":[{"url":"http://127.0.0.1:8080/apiconfig/api/v1","description":"Generated server url"}],"tags":[{"name":"Payment Service Providers","description":"Everything about Payment Service Providers"},{"name":"Creditor Institutions","description":"Everything about Creditor Institution"}],"paths":{"/brokers":{"get":{"tags":["Creditor Institutions"],"summary":"Get paginated list of creditor brokers","operationId":"getBrokers","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Brokers"}}}},"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"post":{"tags":["Creditor Institutions"],"summary":"Create a broker","operationId":"createBroker","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"201":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/brokers/{brokercode}":{"get":{"tags":["Creditor Institutions"],"summary":"Get creditor broker details ","operationId":"getBroker","parameters":[{"name":"brokercode","in":"path","description":"broker code.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerDetails"}}}},"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"put":{"tags":["Creditor Institutions"],"summary":"Update a broker","operationId":"updateBroker","parameters":[{"name":"brokercode","in":"path","description":"broker code","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"requestBody":{"description":"The values to update of the broker","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerDetails"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"delete":{"tags":["Creditor Institutions"],"summary":"Delete a broker","operationId":"deleteBroker","parameters":[{"name":"brokercode","in":"path","description":"broker code","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK."},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/brokerspsp":{"get":{"tags":["Payment Service Providers"],"summary":"Get paginated list of PSP brokers","operationId":"getBrokersPsp","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokersPsp"}}}},"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/brokerspsp/{brokerpspcode}":{"get":{"tags":["Payment Service Providers"],"summary":"Get creditor broker details ","operationId":"getBrokerPsp","parameters":[{"name":"brokerpspcode","in":"path","description":"Broker code of a PSP.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BrokerPspDetails"}}}},"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/channels":{"get":{"tags":["Payment Service Providers"],"summary":"Get paginated list of channels","operationId":"getChannels","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Channels"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/channels/{channelcode}":{"get":{"tags":["Payment Service Providers"],"summary":"Get channel details ","operationId":"getChannel","parameters":[{"name":"channelcode","in":"path","description":"channel code.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChannelDetails"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/counterparttables":{"get":{"tags":["Creditor Institutions"],"summary":"Get the counterparties table","operationId":"getCounterpartTables","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CounterpartTables"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/counterparttables/{idcounterparttable}":{"get":{"tags":["Creditor Institutions"],"summary":"Download a XML file containing the details of a counterpart table","operationId":"getCounterpartTable","parameters":[{"name":"idcounterparttable","in":"path","description":"Id counterpart table","required":true,"schema":{"type":"string"}},{"name":"creditorinstitutioncode","in":"query","description":"Creditor institution code","required":true,"schema":{"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/xml":{"schema":{"type":"string","format":"binary"}},"application/json":{"schema":{"type":"string","format":"binary"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions":{"get":{"tags":["Creditor Institutions"],"summary":"Get paginated list of creditor institutions","operationId":"getCreditorInstitutions","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutions"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"post":{"tags":["Creditor Institutions"],"summary":"Create creditor institution","operationId":"createCreditorInstitution","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"201":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionDetails"}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}":{"get":{"tags":["Creditor Institutions"],"summary":"Get creditor institution details","operationId":"getCreditorInstitution","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"put":{"tags":["Creditor Institutions"],"summary":"Update creditor institution","operationId":"updateCreditorInstitution","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"The fiscal code of the Organization to update","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}}],"requestBody":{"description":"The values to update of the organization","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionDetails"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"delete":{"tags":["Creditor Institutions"],"summary":"Delete creditor institution","operationId":"deleteCreditorInstitution","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}/encodings":{"get":{"tags":["Creditor Institutions"],"summary":"Get creditor institution encodings","operationId":"getCreditorInstitutionEncodings","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionEncodings"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"post":{"tags":["Creditor Institutions"],"summary":"Delete a creditor institution encoding","operationId":"createCreditorInstitutionEncoding","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Encoding"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"201":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Encoding"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}/encodings/{encodingcode}":{"delete":{"tags":["Creditor Institutions"],"summary":"Delete a creditor institution encoding","operationId":"deleteCreditorInstitutionEncoding","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}},{"name":"encodingcode","in":"path","description":"Code of the Encoding","required":true,"schema":{"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK."},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}/ibans":{"get":{"tags":["Creditor Institutions"],"summary":"Get creditor institution ibans","operationId":"getCreditorInstitutionsIbans","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Ibans"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}/stations":{"get":{"tags":["Creditor Institutions"],"summary":"Get station details and relation info with creditor institution","operationId":"getCreditorInstitutionStations","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionStationList"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"post":{"tags":["Creditor Institutions"],"summary":"Create station details and relation info with creditor institution","operationId":"createCreditorInstitutionStation","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionStationEdit"}}},"required":true},"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionStationEdit"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/creditorinstitutions/{creditorinstitutioncode}/stations/{stationcode}":{"put":{"tags":["Creditor Institutions"],"summary":"Update a relation between creditor institution and station","operationId":"updateCreditorInstitutionStation","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"The fiscal code of the Organization to update","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}},{"name":"stationcode","in":"path","description":"station code.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionStationEdit"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditorInstitutionStationEdit"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"delete":{"tags":["Creditor Institutions"],"summary":"Delete a relation between creditor institution and station","operationId":"deleteCreditorInstitutionStation","parameters":[{"name":"creditorinstitutioncode","in":"path","description":"Organization fiscal code, the fiscal code of the Organization.","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}},{"name":"stationcode","in":"path","description":"station code.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/icas":{"get":{"tags":["Creditor Institutions"],"summary":"Get the list of ICAs","operationId":"getIcas","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Icas"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/icas/xsd":{"post":{"tags":["Creditor Institutions"],"summary":"Validate XML against XSD","operationId":"checkXSD","requestBody":{"content":{"multipart/form-data":{"schema":{"required":["file"],"type":"object","properties":{"file":{"type":"string","description":"XML file regarding ICA to check","format":"binary"}}}}},"required":true},"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/XSDValidation"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/icas/{idica}":{"get":{"tags":["Creditor Institutions"],"summary":"Download a XML file containing the details of an ICA","operationId":"getIca","parameters":[{"name":"idica","in":"path","description":"Id ICA","required":true,"schema":{"type":"string"}},{"name":"creditorinstitutioncode","in":"query","description":"Creditor institution code","required":true,"schema":{"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/xml":{"schema":{"type":"string","format":"binary"}},"application/json":{"schema":{"type":"string","format":"binary"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/info":{"get":{"tags":["Home"],"summary":"Return OK if application is started","operationId":"healthCheck","responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK."},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/paymentserviceproviders":{"get":{"tags":["Payment Service Providers"],"summary":"Get paginated list of Payment Service Providers","operationId":"getPaymentServiceProviders","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentServiceProviders"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/paymentserviceproviders/{pspcode}":{"get":{"tags":["Payment Service Providers"],"summary":"Get payment service provider details","operationId":"getPaymentServiceProvider","parameters":[{"name":"pspcode","in":"path","description":"Code of the payment service provider","required":true,"schema":{"maxLength":50,"minLength":1,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PaymentServiceProviderDetails"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/services":{"get":{"tags":["Payment Service Providers"],"summary":"Get paginated list of services","operationId":"getServices","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"pspcode","in":"query","required":false,"schema":{"type":"string"}},{"name":"brokerpspcode","in":"query","required":false,"schema":{"type":"string"}},{"name":"channelcode","in":"query","required":false,"schema":{"type":"string"}},{"name":"paymentmethodchannel","in":"query","required":false,"schema":{"type":"integer","format":"int64"}},{"name":"paymentTypeCode","in":"query","required":false,"schema":{"type":"string","enum":["PAYPAL","POSTAL","TREASURY_BANK_TRANSFER","DIRECT_DEBIT","PAYMENT_CARD","PSP_PAYMENT","ONLINE_BANKING_PAYMENT","JIFFY","MYBANK"]}},{"name":"pspflagftamp","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"channelapp","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"onus","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"flagio","in":"query","required":false,"schema":{"type":"boolean"}},{"name":"flowid","in":"query","required":false,"schema":{"type":"string"}},{"name":"minimumamount","in":"query","required":false,"schema":{"type":"number","format":"double"}},{"name":"maximumamount","in":"query","required":false,"schema":{"type":"number","format":"double"}},{"name":"languagecode","in":"query","required":false,"schema":{"type":"string","enum":["IT","EN","FR","DE","SL"],"default":"IT"}},{"name":")","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Services"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/stations":{"get":{"tags":["Creditor Institutions"],"summary":"Get paginated list of stations","operationId":"getStations","parameters":[{"name":"limit","in":"query","description":"Number of elements on one page. Default = 50","required":false,"schema":{"type":"integer","format":"int32","default":50}},{"name":"page","in":"query","description":"Page number. Page value starts from 0","required":true,"schema":{"type":"integer","format":"int32"}},{"name":"brokercode","in":"query","description":"Filter by broker","required":false,"schema":{"type":"string"}},{"name":"creditorinstitutioncode","in":"query","description":"Filter by creditor institution","required":false,"schema":{"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Stations"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"post":{"tags":["Creditor Institutions"],"summary":"Create a station","operationId":"createStation","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StationDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"201":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StationDetails"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}},"/stations/{stationcode}":{"get":{"tags":["Creditor Institutions"],"summary":"Get station details","operationId":"getStation","parameters":[{"name":"stationcode","in":"path","description":"station code.","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"403":{"description":"Forbidden client error status."},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StationDetails"}}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"429":{"description":"Too many requests"}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"put":{"tags":["Creditor Institutions"],"summary":"Update a station","operationId":"updateStation","parameters":[{"name":"stationcode","in":"path","description":"station code","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"requestBody":{"description":"The values to update of the station","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StationDetails"}}},"required":true},"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"200":{"description":"OK.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StationDetails"}}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]},"delete":{"tags":["Creditor Institutions"],"summary":"Delete a station","operationId":"deleteStation","parameters":[{"name":"stationcode","in":"path","description":"station code","required":true,"schema":{"maxLength":50,"minLength":0,"type":"string"}}],"responses":{"429":{"description":"Too many requests","content":{"application/json":{}}},"403":{"description":"Forbidden client error status.","content":{"application/json":{}}},"500":{"description":"Service unavailable.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"200":{"description":"OK."},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProblemJson"}}}}},"security":[{"ApiKey":[]},{"Authorization":[]}]}}},"components":{"schemas":{"StationDetails":{"required":["broker_code","enabled","ip","password","port","protocol","service","station_code","thread_number","timeout_a","timeout_b","timeout_c","version"],"type":"object","properties":{"station_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"enabled":{"type":"boolean","description":"station enabled","default":true},"version":{"type":"integer","description":"number version","format":"int64"},"ip":{"type":"string"},"new_password":{"type":"string"},"password":{"type":"string"},"port":{"type":"integer","format":"int64"},"protocol":{"type":"string"},"redirect_ip":{"type":"string"},"redirect_path":{"type":"string"},"redirect_port":{"type":"integer","format":"int64"},"redirect_query_string":{"type":"string"},"redirect_protocol":{"type":"string"},"service":{"type":"string"},"broker_code":{"type":"string"},"protocol_4mod":{"type":"string"},"ip_4mod":{"type":"string"},"port_4mod":{"type":"integer","format":"int64"},"service_4mod":{"type":"string"},"proxy_enabled":{"type":"boolean"},"proxy_host":{"type":"string"},"proxy_port":{"type":"integer","format":"int64"},"proxy_username":{"type":"string"},"proxy_password":{"type":"string"},"thread_number":{"type":"integer","format":"int64"},"timeout_a":{"type":"integer","format":"int64"},"timeout_b":{"type":"integer","format":"int64"},"timeout_c":{"type":"integer","format":"int64"},"flag_online":{"type":"boolean"}}},"ProblemJson":{"type":"object","properties":{"type":{"type":"string","description":"An absolute URI that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g., using HTML).","format":"uri","example":"https://example.com/problem/constraint-violation"},"title":{"type":"string","description":"A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable"},"status":{"maximum":600,"minimum":100,"type":"integer","description":"The HTTP status code generated by the origin server for this occurrence of the problem.","format":"int32","example":200},"detail":{"type":"string","description":"A human readable explanation specific to this occurrence of the problem.","example":"There was an error processing the request"},"instance":{"type":"string","description":"An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.","format":"uri"}}},"CreditorInstitutionAddress":{"type":"object","properties":{"location":{"type":"string","example":"Via delle vie 3"},"city":{"type":"string","example":"Lorem"},"zip_code":{"pattern":"^\\d{5}$","type":"string","example":"00187"},"country_code":{"pattern":"^\\w{2}$","type":"string","example":"RM"},"tax_domicile":{"type":"string"}}},"CreditorInstitutionDetails":{"required":["address","business_name","creditor_institution_code","enabled","psp_payment","reporting_ftp","reporting_zip"],"type":"object","properties":{"creditor_institution_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"enabled":{"type":"boolean","description":"creditor institution enabled","default":true},"business_name":{"maxLength":70,"minLength":0,"type":"string","example":"Comune di Lorem Ipsum"},"address":{"$ref":"#/components/schemas/CreditorInstitutionAddress"},"psp_payment":{"type":"boolean","default":true},"reporting_ftp":{"type":"boolean","default":false},"reporting_zip":{"type":"boolean","default":false}}},"CreditorInstitutionStationEdit":{"required":["station_code"],"type":"object","properties":{"station_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"aux_digit":{"type":"integer","format":"int64"},"application_code":{"type":"integer","format":"int64"},"segregation_code":{"type":"integer","format":"int64"},"mod4":{"type":"boolean"},"broadcast":{"type":"boolean"}}},"BrokerDetails":{"required":["broker_code","description","enabled","extended_fault_bean"],"type":"object","properties":{"broker_code":{"maxLength":35,"minLength":0,"type":"string","example":"223344556677889900"},"enabled":{"type":"boolean"},"description":{"maxLength":255,"minLength":0,"type":"string","example":"Lorem ipsum dolor sit amet"},"extended_fault_bean":{"type":"boolean"}}},"XSDValidation":{"required":["detail","xsdCompliant","xsdSchema"],"type":"object","properties":{"xsdCompliant":{"type":"boolean","example":false},"xsdSchema":{"type":"string","example":"https://raw.githubusercontent.com/pagopa/pagopa-api/master/general/InformativaContoAccredito_1_2_1.xsd"},"detail":{"type":"string","example":"Invalid content was found starting with element 'idBancaSeller'. One of '{ibanAccredito}' is expected. Error at lineNumber: 10"}}},"Encoding":{"required":["code_type","encoding_code"],"type":"object","properties":{"code_type":{"type":"string","enum":["BARCODE_GS1_128","QR_CODE","BARCODE_128_AIM"]},"encoding_code":{"type":"string","example":"0000111"}}},"PageInfo":{"required":["items_found","limit","page","total_pages"],"type":"object","properties":{"page":{"type":"integer","description":"Page number","format":"int32"},"limit":{"type":"integer","description":"Required number of items per page","format":"int32"},"items_found":{"type":"integer","description":"Number of items found. (The last page may have fewer elements than required)","format":"int32"},"total_pages":{"type":"integer","description":"Total number of pages","format":"int32"}}},"Station":{"required":["enabled","station_code","version"],"type":"object","properties":{"station_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"enabled":{"type":"boolean","description":"station enabled","default":true},"version":{"type":"integer","description":"number version","format":"int64"}}},"Stations":{"required":["page_info","stations"],"type":"object","properties":{"stations":{"type":"array","items":{"$ref":"#/components/schemas/Station"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"Service":{"type":"object","properties":{"psp_code":{"maxLength":35,"minLength":0,"type":"string"},"flow_id":{"maxLength":35,"minLength":0,"type":"string"},"psp_business_name":{"type":"string"},"psp_flag_stamp":{"type":"boolean"},"broker_psp_code":{"maxLength":35,"minLength":0,"type":"string"},"channel_code":{"maxLength":35,"minLength":0,"type":"string"},"service_name":{"maxLength":35,"minLength":0,"type":"string"},"payment_method_channel":{"type":"integer","format":"int64"},"payment_type_code":{"type":"string","enum":["PAYPAL","POSTAL","TREASURY_BANK_TRANSFER","DIRECT_DEBIT","PAYMENT_CARD","PSP_PAYMENT","ONLINE_BANKING_PAYMENT","JIFFY","MYBANK"]},"language_code":{"maxLength":2,"minLength":0,"type":"string","enum":["IT","EN","FR","DE","SL"]},"service_description":{"maxLength":511,"minLength":0,"type":"string"},"service_availability":{"maxLength":511,"minLength":0,"type":"string"},"channel_url":{"type":"string"},"minimum_amount":{"type":"number","format":"double"},"maximum_amount":{"type":"number","format":"double"},"fixed_cost":{"type":"number","format":"double"},"timestamp_insertion":{"type":"string","format":"date-time"},"validity_date":{"type":"string","format":"date-time"},"logo_psp":{"type":"array","items":{"type":"string","format":"byte"}},"tags":{"maxLength":135,"minLength":0,"type":"string"},"logo_service":{"type":"array","items":{"type":"string","format":"byte"}},"channel_app":{"type":"boolean"},"on_us":{"type":"boolean"},"cart_card":{"type":"boolean"},"abi_code":{"maxLength":5,"minLength":0,"type":"string"},"mybank_code":{"maxLength":35,"minLength":0,"type":"string"},"convention_code":{"maxLength":35,"minLength":0,"type":"string"},"flag_io":{"type":"boolean"}}},"Services":{"required":["page_info","services"],"type":"object","properties":{"services":{"type":"array","items":{"$ref":"#/components/schemas/Service"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"PaymentServiceProvider":{"required":["business_name","enabled","psp_code"],"type":"object","properties":{"psp_code":{"type":"string"},"enabled":{"type":"boolean"},"business_name":{"type":"string"}}},"PaymentServiceProviders":{"required":["page_info","payment_service_providers"],"type":"object","properties":{"payment_service_providers":{"type":"array","items":{"$ref":"#/components/schemas/PaymentServiceProvider"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"PaymentServiceProviderDetails":{"required":["business_name","enabled","psp_code"],"type":"object","properties":{"psp_code":{"type":"string"},"enabled":{"type":"boolean"},"business_name":{"type":"string"},"abi":{"type":"string"},"bic":{"type":"string"},"transfer":{"type":"integer","format":"int64"},"my_bank_code":{"type":"string","description":"MyBank code"},"stamp":{"type":"integer","format":"int64"},"agid_psp":{"type":"boolean","description":"True if the PSP is internal"},"tax_code":{"type":"string"},"vat_number":{"type":"string"}}},"Ica":{"required":["business_name","creditor_institution_code","id_ica","publication_date","validity_date"],"type":"object","properties":{"id_ica":{"type":"string","example":"123456789"},"creditor_institution_code":{"type":"string","example":"1234567890100"},"business_name":{"type":"string","example":"Comune di Lorem Ipsum"},"validity_date":{"type":"string","format":"date-time"},"publication_date":{"type":"string","format":"date-time"}}},"Icas":{"required":["icas","page_info"],"type":"object","properties":{"icas":{"type":"array","items":{"$ref":"#/components/schemas/Ica"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"CreditorInstitution":{"required":["business_name","creditor_institution_code","enabled"],"type":"object","properties":{"creditor_institution_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"enabled":{"type":"boolean","description":"creditor institution enabled","default":true},"business_name":{"maxLength":70,"minLength":0,"type":"string","example":"Comune di Lorem Ipsum"}}},"CreditorInstitutions":{"required":["creditor_institutions","page_info"],"type":"object","properties":{"creditor_institutions":{"type":"array","items":{"$ref":"#/components/schemas/CreditorInstitution"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"CreditorInstitutionStation":{"required":["enabled","station_code","version"],"type":"object","properties":{"station_code":{"maxLength":35,"minLength":0,"type":"string","example":"1234567890100"},"enabled":{"type":"boolean","description":"station enabled","default":true},"version":{"type":"integer","description":"number version","format":"int64"},"application_code":{"type":"integer","format":"int64"},"aux_digit":{"type":"integer","format":"int64"},"segregation_code":{"type":"integer","format":"int64"},"mod4":{"type":"boolean"},"broadcast":{"type":"boolean"}}},"CreditorInstitutionStationList":{"required":["stations_list"],"type":"object","properties":{"stations_list":{"type":"array","items":{"$ref":"#/components/schemas/CreditorInstitutionStation"}}}},"Iban":{"required":["iban","publication_date","validity_date"],"type":"object","properties":{"iban":{"maxLength":35,"minLength":0,"type":"string","example":"IT99C0222211111000000000000"},"validity_date":{"type":"string","format":"date-time"},"publication_date":{"type":"string","format":"date-time"}}},"Ibans":{"required":["ibans"],"type":"object","properties":{"ibans":{"type":"array","items":{"$ref":"#/components/schemas/Iban"}}}},"CreditorInstitutionEncodings":{"required":["encodings"],"type":"object","properties":{"encodings":{"type":"array","items":{"$ref":"#/components/schemas/Encoding"}}}},"CounterpartTable":{"required":["business_name","creditor_institution_code","id_counterpart_table","publication_date","validity_date"],"type":"object","properties":{"id_counterpart_table":{"type":"string","example":"123456789"},"business_name":{"type":"string","example":"Comune di Lorem Ipsum"},"creditor_institution_code":{"type":"string","example":"1234567890100"},"publication_date":{"type":"string","format":"date-time"},"validity_date":{"type":"string","format":"date-time"}}},"CounterpartTables":{"required":["counterpart_tables","page_info"],"type":"object","properties":{"counterpart_tables":{"type":"array","items":{"$ref":"#/components/schemas/CounterpartTable"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"Channel":{"required":["channel_code","description","enabled"],"type":"object","properties":{"channel_code":{"type":"string","example":"223344556677889900"},"enabled":{"type":"boolean"},"description":{"maxLength":255,"minLength":0,"type":"string","example":"Lorem ipsum dolor sit amet"}}},"Channels":{"required":["channels_list","page_info"],"type":"object","properties":{"channels_list":{"type":"array","items":{"$ref":"#/components/schemas/Channel"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"ChannelDetails":{"required":["broker_psp_code","channel_code","description","enabled","ip","password","port","protocol","service","thread_number","timeout_a","timeout_b","timeout_c"],"type":"object","properties":{"channel_code":{"type":"string","example":"223344556677889900"},"enabled":{"type":"boolean"},"description":{"maxLength":255,"minLength":0,"type":"string","example":"Lorem ipsum dolor sit amet"},"password":{"type":"string"},"new_password":{"type":"string"},"protocol":{"type":"string"},"ip":{"type":"string"},"port":{"type":"integer","format":"int64"},"service":{"type":"string"},"broker_psp_code":{"type":"string"},"proxy_enabled":{"type":"boolean"},"proxy_host":{"type":"string"},"proxy_port":{"type":"integer","format":"int64"},"proxy_username":{"type":"string"},"proxy_password":{"type":"string"},"thread_number":{"type":"integer","format":"int64"},"timeout_a":{"type":"integer","format":"int64"},"timeout_b":{"type":"integer","format":"int64"},"timeout_c":{"type":"integer","format":"int64"},"npm_service":{"type":"string"},"redirect_ip":{"type":"string"},"redirect_path":{"type":"string"},"redirect_port":{"type":"integer","format":"int64"},"redirect_query_string":{"type":"string"},"redirect_protocol":{"type":"string"},"payment_model":{"type":"string","enum":["IMMEDIATE","IMMEDIATE_MULTIBENEFICIARY","DEFERRED","ACTIVATED_AT_PSP"]},"serv_plugin":{"type":"string"},"rt_push":{"type":"boolean"},"on_us":{"type":"boolean"},"card_chart":{"type":"boolean"},"recovery":{"type":"boolean"},"digital_stamp_brand":{"type":"boolean"},"flag_io":{"type":"boolean"}}},"BrokerPsp":{"required":["broker_psp_code","description","enabled"],"type":"object","properties":{"broker_psp_code":{"maxLength":35,"minLength":0,"type":"string","example":"223344556677889900"},"description":{"type":"string"},"enabled":{"type":"boolean"}}},"BrokersPsp":{"required":["brokers_psp_list","page_info"],"type":"object","properties":{"brokers_psp_list":{"type":"array","items":{"$ref":"#/components/schemas/BrokerPsp"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}},"BrokerPspDetails":{"required":["broker_psp_code","description","enabled","extended_fault_bean"],"type":"object","properties":{"broker_psp_code":{"maxLength":35,"minLength":0,"type":"string","example":"223344556677889900"},"description":{"type":"string"},"enabled":{"type":"boolean"},"extended_fault_bean":{"type":"boolean"}}},"Broker":{"required":["broker_code","description","enabled"],"type":"object","properties":{"broker_code":{"maxLength":35,"minLength":0,"type":"string","example":"223344556677889900"},"enabled":{"type":"boolean"},"description":{"maxLength":255,"minLength":0,"type":"string","example":"Lorem ipsum dolor sit amet"}}},"Brokers":{"required":["brokers_list","page_info"],"type":"object","properties":{"brokers_list":{"type":"array","items":{"$ref":"#/components/schemas/Broker"}},"page_info":{"$ref":"#/components/schemas/PageInfo"}}}},"securitySchemes":{"ApiKey":{"type":"apiKey","description":"The API key to access this function app.","name":"Ocp-Apim-Subscription-Key","in":"header"},"Authorization":{"type":"http","description":"JWT token get after Azure Login","name":"Authorization","in":"header","scheme":"Bearer","bearerFormat":"JWT"}}}}
>>>>>>> c516906 ([PCFG-31] merge with main)

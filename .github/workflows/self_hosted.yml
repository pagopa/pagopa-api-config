name: Self Hosted Runner

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      matrix:
        required: true
        description: The environment of the job
        type: string
      beta:
        required: false
        type: boolean
        description: deploy beta version on AKS
        default: false
    secrets:
      token:
        required: true
        description: Github Token

env:
  NAMESPACE: apiconfig
  APP_NAME: pagopaapiconfig


permissions:
  id-token: write
  contents: read

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    if: ${{ inputs.matrix == inputs.environment || inputs.environment == 'all' }}
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Dump GitHub context
        run: |
          echo $CONTEXT
          echo $VARIABLES
          echo $IN
        env:
          CONTEXT: ${{ toJSON(github) }}
          VARIABLES: ${{ toJSON(vars) }}
          IN: ${{ toJSON(inputs) }}

      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-create-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-create-action@b4590e069e753daee6bc9809d484523cc7026035
        with:
          client_id: ${{ vars.CLIENT_ID }}
          tenant_id: ${{ vars.TENANT_ID }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ vars.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ vars.RESOURCE_GROUP_NAME }} # RG of the runner
          pat_token: ${{ inputs.token }}

  deploy:
    needs: [ create_runner ]
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    if: ${{ inputs.matrix == inputs.environment || inputs.environment == 'all' }}
    name: Deploy on AKS
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy
        uses: pagopa/github-actions-template/aks-deploy@main
        with:
          branch: ${{ github.ref_name }}
          client_id: ${{ vars.CLIENT_ID }}
          tenant_id: ${{ vars.TENANT_ID }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID }}
          env: ${{ inputs.environment }}
          namespace: ${{ env.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP_NAME }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ${{( inputs.beta && '--set microservice-chart.deployment.create=false') || '' }}

  cleanup_runner:
    name: Cleanup Runner
    needs: [ create_runner, deploy ]
    if: ${{ success() || failure() && inputs.matrix == inputs.environment || inputs.environment == 'all' }}
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-cleanup-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-cleanup-action@97731a35e6ffc79b66c4dfd2aae5e4fd04e3ebb5
        with:
          client_id: ${{ vars.CLIENT_ID }}
          tenant_id: ${{ vars.TENANT_ID }}
          subscription_id: ${{ vars.SUBSCRIPTION_ID }}
          resource_group_name: ${{ vars.RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ inputs.token }}

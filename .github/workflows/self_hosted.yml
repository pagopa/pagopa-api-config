name: Self Hosted Runner

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
      beta:
        required: false
        type: boolean
        description: deploy beta version on AKS
        default: false

env:
  NAMESPACE: apiconfig
  APP_NAME: pagopaapiconfig


permissions:
  id-token: write
  contents: read

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    if: ${{ inputs.target == inputs.environment || inputs.environment == 'all' }}
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-create-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-create-action@b4590e069e753daee6bc9809d484523cc7026035
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ secrets.CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ secrets.RUNNER_RESOURCE_GROUP_NAME }} # RG of the runner
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}
          self_hosted_runner_image_tag: "v1.4.0"

  deploy:
    needs: [ create_runner ]
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    if: ${{ inputs.target == inputs.environment || inputs.environment == 'all' }}
    name: Deploy on AKS
    environment: ${{ inputs.environment }}
    steps:
      #      - name: Deploy
      #        uses: pagopa/github-actions-template/aks-deploy@main
      #        with:
      #          branch: ${{ github.ref_name }}
      #          client_id: ${{ secrets.CLIENT_ID }}
      #          tenant_id: ${{ secrets.TENANT_ID }}
      #          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      #          env: ${{ inputs.environment }}
      #          namespace: ${{ env.NAMESPACE }}
      #          cluster_name: ${{ secrets.CLUSTER_NAME }}
      #          resource_group: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
      #          app_name: ${{ env.APP_NAME }}
      #          helm_upgrade_options: ${{( inputs.beta && '--set microservice-chart.deployment.create=false') || '' }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name}}

      - run: echo "STABLE_VERSION=$(curl https://api.${inputs.target}.platform.pagopa.it//shared/statuspage/v1/info?product=${github.repo_name}) >> $GITHUB_ENV
        if: ${{ inputs.target != 'prod' }}

      - run: echo "STABLE_VERSION=$(curl https://api.platform.pagopa.it//shared/statuspage/v1/info?product=${github.repo_name}) >> $GITHUB_ENV
        if: ${{ inputs.target == 'prod' }}

      - name: Azure Login
        uses: azure/login@89d153571fe9a34ed70fcf9f1d95ab8debea7a73
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        # TODO:  az ad sp create-for-rbac --name github-action-dev --role contributor --scopes /subscriptions/<sub-id> --sdk-auth

      - name: Gets K8s context
        id: login
        uses: azure/aks-set-context@4e5aec273183a197b181314721843e047123d9fa
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ secrets.CLUSTER_RESOURCE_GROUP_NAME }}
          cluster-name: ${{ secrets.CLUSTER_NAME }}
          cluster-type: arc
          method: service-principal

      - name: Helm Setup
        run: |
          helm repo add microservice-chart https://pagopa.github.io/aks-microservice-chart-blueprint
          helm dep build helm

      - name: Helm Deploy
        run: helm upgrade --namespace ${{ env.NAMESPACE }}
          --install --values ./helm/values-${{ inputs.environment }}.yaml
          ${{( inputs.beta && '--set microservice-chart.canaryDelivery.deployment.image.tag=${{ env.stable_version }}') || '' }}
          --wait --timeout 5m0s
          ${{ env.APP_NAME }} ./helm


  cleanup_runner:
    name: Cleanup Runner
    needs: [ create_runner, deploy ]
    if: ${{ success() || failure() && inputs.target == inputs.environment || inputs.environment == 'all' }}
    runs-on: ubuntu-22.04
    environment: ${{ inputs.environment }}
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-cleanup-action/commits/main
        uses: pagopa/github-self-hosted-runner-azure-cleanup-action@main
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          resource_group_name: ${{ secrets.RUNNER_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN_GITHUB }}

name: Code Review

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_KEY: pagopa_pagopa-api-config
  GITHUB_TOKEN_READ_PACKAGES: ${{ secrets.GITHUB_TOKEN }}

permissions:
  id-token: write
  contents: read
  deployments: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  code-review:
    name: Code Review
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Code Review
        uses: pagopa/github-actions-template/maven-code-review@v1.4.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          project_key: ${{env.PROJECT_KEY}}
          coverage_exclusions: "**/config/*,**/*Mock*,**/model/**,**/entity/*"
          cpd_exclusions: "**/model/**,**/entity/*"

  smoke-test:
    name: Smoke Test
    runs-on: ubuntu-latest
    environment:
      name: dev
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707

      - name: Login
        id: login
        # from https://github.com/Azure/login/commits/master
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Run Service on Docker
        shell: bash
        id: run_service_docker
        run: |
          cd ./docker
          chmod +x ./run_docker.sh
          ./run_docker.sh local

      - name: Run Integration Tests
        shell: bash
        id: run_integration_test
        run: |
          export SUBKEY=${{ secrets.SUBKEY }}      
          export CANARY=${{ inputs.canary }}      
          export CUCUMBER_PUBLISH_TOKEN=${{ secrets.CUCUMBER_PUBLISH_TOKEN }}
          
          cd ./integration-test
          chmod +x ./run_integration_test.sh
          ./run_integration_test.sh local


  delete_github_deployments:
    runs-on: ubuntu-latest
    needs: smoke-test
    if: ${{ always() }}
    steps:
      - name: Delete Previous deployments
        uses: actions/github-script@v6
        env:
          SHA_HEAD: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.sha) || github.sha}}
        with:
          script: |
            const { SHA_HEAD } = process.env

            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: SHA_HEAD
            });
            await Promise.all(
              deployments.data.map(async (deployment) => {
                await github.rest.repos.createDeploymentStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                  state: 'inactive'
                });
                return github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
              })
            );

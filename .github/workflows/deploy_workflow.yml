name: Deploy

# Controls when the workflow will run
on:
  pull_request:
    branches:
      - main
    types: [ closed ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
          - prod
          - all
      semver:
        required: true
        type: choice
        description: Select the new Semantic Version
        options:
          - major
          - minor
          - patch
          - buildNumber
          - skip
      force_push_image:
        required: false
        type: boolean
        description: To Re-build and push the docker image
        default: false
      beta:
        required: false
        type: boolean
        description: deploy beta version on AKS
        default: false


env:
  NAMESPACE: apiconfig
  APP_NAME: pagopaapiconfig


permissions:
  packages: write
  contents: write
  issues: write
  id-token: write
  actions: read


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    uses: ./.github/workflows/template/release.yml
    with:
      semver: ${{inputs.semver}}
      force_push_image: ${{inputs.force_push_image}}

  deploy:
    uses: ./.github/workflows/template/deploy_aks.yml
    with:
      environment: ${{inputs.environment}}

  notify:
    needs: [ deploy ]
    runs-on: ubuntu-latest
    name: Notify
    if: always()
    steps:
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ needs.deploy.result }}
          token: ${{ secrets.GITHUB_TOKEN }}
          notify_when: 'failure,skipped'
          notification_title: '{workflow} has {status_message}'
          message_format: '{emoji} <{workflow_url}|{workflow}> {status_message} in <{repo_url}|{repo}>'
          footer: 'Linked to Repo <{repo_url}|{repo}>'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
